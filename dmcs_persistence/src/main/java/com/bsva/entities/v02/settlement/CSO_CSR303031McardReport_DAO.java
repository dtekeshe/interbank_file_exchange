package com.bsva.entities.v02.settlement;

import com.bsva.dao.AbstractDao;

public class CSO_CSR303031McardReport_DAO extends AbstractDao<Void, Void> {

	private final static String CSO_CCR030_MCARD_SQL_INSERT = "  INSERT INTO CSO_CCR030_MCARD	"
			        +"   ( 																					"
					+"   ACQUIRER_MEMBER,  																	"
					+"   ISSUER_MEMBER, 																	"
					+"   CARD_TYPE, 																		"
					+"   CARD_NO, 																			"
					+"   TRANSACTION_CODE, 																	"
					+"   TRANSACTION_PROCESS_CODE, 															"
					+"   TRANSACTION_DATE, 																	"
					+"   TRANSACTION_TIME, 																	"
					+"   SEQUENCE_NUMBER, 																	"
					+"   TRANSACTION_ACQUIRER_REF_DATA, 													"
					+"   TRANSACTION_POINT_OF_SALE, 														"
					+"   TERMINAL_CAPABILITY, 																"
					+"   CARD_PRESENT, 																		"
					+"   TRANSACTION_SERVICE_CODE, 															"
					+"   TRANSACTION_IRD, 																	"
					+"   ECOMM_INDICATOR, 																	"
					+"   MASTERCARD_AMOUNT, 																"
					+"   CASHBACK_PURCHASE_AMOUNT, 															"
					+"   MCC, 																				"
					+"   RATE_DESCRIPTOR,																	"
					+"   INTERCHANGE_FEE, 																	"
					+"   INTERCHANGE_PERC,																	"
					+"   INTERCHANGE_VAT,																	"
					+"   CASHBACK_INTERCHANGE_FEE, 															"
					+"   CASHBACK_INTERCHANGE_VAT, 															"
					+"   TRANSACTION_TERMINAL_TYPE 															"
					+"  )  																					"
					+"   SELECT 																			"
					+"          LPAD (acquirer_member, 4, '0') AS ACQUIRER_MEMBER, 							"
					+"          LPAD (issuer_member, 4, '0')AS ISSUER_MEMBER, 								"         
					+"          LPAD (card_type, 2, '0') AS CARD_TYPE,       								"   
					+"          RPAD (card_no, 16, ' ') AS CARD_NO, 										"
					+"          LPAD (transaction_code, 2, 0)AS TRANSACTION_CODE,							"
					+"          LPAD (tx_process_code, 6, 0) AS TRANSACTION_PROCESS_CODE, 					"
					+"          LPAD (tx_date, 6, 0) AS TRANSACTION_DATE, 									"
					+"          LPAD (tx_time, 6, 0) AS TRANSACTION_TIME, 									"
					+"          LPAD (bsva_seqno, 12, 0) AS SEQUENCE_NUMBER, 								"
					+"          RPAD (tx_acq_ref_data, 23, '0') AS TRANSACTION_ACQUIRER_REF_DATA,			"
					+"          RPAD (tx_point_of_sale, 12, ' ')AS TRANSACTION_POINT_OF_SALE,				"
					+"          RPAD (terminal_capability, 1, '0')AS TERMINAL_CAPABILITY, 					"
					+"          RPAD (card_present, 1, '0') AS CARD_PRESENT,								"
					+"          LPAD (tx_service_code, 3, '0')AS TRANSACTION_SERVICE_CODE, 					"
					+"          RPAD (tx_ird, 2, '0') AS TRANSACTION_IRD,									"
					+"          RPAD (ecomm_ind, 1, ' ')AS ECOMM_INDICATOR , 								"
					+"          TO_CHAR (ABS (mastercard_amount), 'fm09999999999.90')AS MASTERCARD_AMOUNT, 	"
					+"          TO_CHAR (ABS (cashback_purchase_amnt), 'fm09999999999.90') AS CASHBACK_PURCHASE_AMOUNT , 	"
					+"          RPAD (mcc, 4, ' ') AS MCC, 																"
					+"          RPAD (rate_desc, 10, ' ')AS RATE_DESCRIPTOR, 											"
					+"          TO_CHAR (ABS (interchange_fee), 'fm099999.90') AS INTERCHANGE_FEE, 						"
					+"          TO_CHAR (ABS (interchange_perc), 'fm099999.90') AS INTERCHANGE_PERC, 					"
					+"          TO_CHAR (ABS (interchange_vat), 'fm0999.90')AS INTERCHANGE_VAT, 						"
					+"          TO_CHAR (ABS (cashback_ic_fee), 'fm099999.90')AS CASHBACK_INTERCHANGE_FEE, 				"
					+"          TO_CHAR (ABS (cashback_ic_vat), 'fm0999.90')AS CASHBACK_INTERCHANGE_VAT, 				"
					+"          RPAD (tx_terminal_type, 3, 0) AS TRANSACTION_TERMINAL_TYPE 								"
					+"     FROM (SELECT a.p2_pan AS card_no, 															"
					+"                  TO_CHAR (a.p12_local_date) AS tx_date, 											"
					+"                  TO_CHAR (a.p13_local_time) AS tx_time, 											"
					+"                  a.IRD AS tx_ird, 																"
					+"                  a.system_seq_number AS bsva_seqno, 												"
					+"                  a.p3_process_code AS tx_process_code, 											"
					+"                  a.P22_POINT_OF_SALE_DATA AS tx_point_of_sale, 		 							"
					+"                  a.terminal_capability, 				 											"
					+"                  a.P40_SERVICE_CODE AS tx_service_code, 											"
					+"                  a.P31_ACQUIRER_REF_DATA AS tx_acq_ref_data, 									"
					+"                  a.card_present, 																"
					+"                  a.chip_card, 																	"
					+"                  a.ecomm_ind, 																	"
					+"                  a.acquirer_member, 																"
					+"                  a.issuer_member, 																"
					+"                  a.mastercard_amount, 															"
					+"                  a.cashback_purchase, 															"
					+"                  a.cashback_purchase_amnt, 														"
					+"                  TRIM (a.card_type) AS card_type, 												"
					+"                  a.transaction_code, 															"
					+"                  TO_CHAR (a.P26_CARD_ACCEPTOR_BUS_CODE) AS mcc, 									"
					+"                  a.rate_desc, 																	"
					+"                  a.interchange_fee, 																"
					+"                  a.interchange_perc, 															"															
					+"                  a.interchange_vat, 																"
					+"                  a.cashback_ic_fee, 																"
					+"                  a.cashback_ic_perc, 															"
					+"                  b.pds_data AS tx_terminal_type, 												"
					+"                  a.cashback_ic_vat  																"
					+"             FROM cso_payment_instructions_mcard a  												"
					+"                  LEFT OUTER JOIN   																"
					+"                  cso_payment_mcard_pds b  														"
					+"                     ON     a.system_seq_number = b.system_seq_number   							"
					+"                        AND b.PDS_NUMBER = 23  													"
					+"            WHERE a.process_status = 'C')  														";

	public void populateCSR3031McardTable() {
		try {
			// executeUpdate with no return results
			executeSelectQuery(CSO_CCR030_MCARD_SQL_INSERT);
		}
		catch (Exception ex) {
			ex.printStackTrace();
		}

	}

}
